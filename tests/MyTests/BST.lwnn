## a BST that I wrote ##
class Main{

    def Main(tree: BST, root: Node, tree_str: string) = {
        tree := new BST();
        tree := tree.add(4, "4");
        tree := tree.add(2, "2");
        tree := tree.add(6, "6");
        tree := tree.add(8, "8");
        tree := tree.add(10, "10");

        root := tree.getRoot();
        ##print "In order:";##
        tree.inOrder(root);
        ##print "Pre order:";##
        tree.preOrder(root);
        ##print "Post order:";##
        tree.postOrder(root);
    }
}

class Node {
    fields key: int, key_str: string, left: Node, right: Node;
    def Node(i: int, l: Node, r: Node) = {
        self.key := i;
        self.left := l;
        self.right := r;
    }

    def setLeft(n: Node) = {
        self.left := n;
    }

    def setRight(n: Node) = {
        self.right := n;
    }
}

class BST{
    fields root: Node;

    def getRoot(): Node = {
        return self.root;
    }

    def add(i: int, int_str: string, n: Node): BST = {
        if (self.root = null){
            n := new Node(i);
            n.key := i;
            n.key_str := int_str;
            self.root := n;
        }else{
            self.addNode(i, self.root);
        };
      return self;
    }

    def addNode(k: int, n: Node, n1: Node, n2: Node) = {
        if(k < n.key){
            if(n.left = null){
                n1 := new Node(k);
                n.setLeft(n1);
            }else{
                self.addNode(k, n.left);
            };
        } else{
            if(n.right = null){
                n2 := new Node(k);
                n.setRight(n2);
            }else{
                self.addNode(k, n.right);
            };
        };
    }

    def inOrder(n: Node) ={
        if (n != null){
            self.inOrder(n.left);
            print n.key;
            self.inOrder(n.right);
        };
    }

    def preOrder(n: Node) ={
        if (n != null){
            print n.key;
            self.preOrder(n.left);
            self.preOrder(n.right);
        };
    }

    def postOrder(n: Node) ={
        if (n != null){
            self.postOrder(n.left);
            self.postOrder(n.right);
            print n.key;
        };
    }
}
